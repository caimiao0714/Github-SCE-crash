# Bayesian_NB_data.csv
d2 = fread("private/truck_crash_SCE.csv") %>%
.[,`:=`(EMPLID = NULL, non_dot_injuries = NULL,
bus_unit = case_when(bus_unit == "DCS00" ~ "Dedicated",
bus_unit == "JBI00" ~ "Intermodal",
bus_unit == "VAN00" ~ "Final-mile"),
d_type = case_when(d_type == "LOC" ~ "Local",
d_type == "REG" ~ "Regional",
d_type == "OTR" ~ "Over-the-road"),
driver = paste0("d", stringr::str_pad(as.integer(as.factor(driver)),
5, "left", "0")))]
fwrite(d2, "data/Bayesian_NB_data.csv")
# Bayesian_NB_data.csv
d2 = fread("private/truck_crash_SCE.csv") %>%
.[,`:=`(EMPLID = NULL, non_dot_injuries = NULL,
bus_unit = case_when(bus_unit == "DCS00" ~ "Dedicated",
bus_unit == "JBI00" ~ "Intermodal",
bus_unit == "VAN00" ~ "Final-mile"),
d_type = case_when(d_type == "LOC" ~ "Local",
d_type == "REG" ~ "Regional",
d_type == "OTR" ~ "Over-the-road"),
driver = paste0("d", stringr::str_pad(as.integer(as.factor(driver)),
5, "left", "0")))]
fwrite(d2, "data/Bayesian_NB_data.csv")
pacman::p_load(data.table, dplyr)
d2 = fread("private/truck_crash_SCE.csv") %>%
.[,`:=`(EMPLID = NULL, non_dot_injuries = NULL,
bus_unit = case_when(bus_unit == "DCS00" ~ "Dedicated",
bus_unit == "JBI00" ~ "Intermodal",
bus_unit == "VAN00" ~ "Final-mile"),
d_type = case_when(d_type == "LOC" ~ "Local",
d_type == "REG" ~ "Regional",
d_type == "OTR" ~ "Over-the-road"),
driver = paste0("d", stringr::str_pad(as.integer(as.factor(driver)),
5, "left", "0")))]
fwrite(d2, "data/Bayesian_NB_data.csv")
pacman::p_load(data.table, dplyr)
# sample_ping.csv
d1 = fread("private/plot_ping_trip_agg.csv") %>%
.[, `:=`(driver = "sample_driver",
trip_id = NULL,
lat = round(lat, 2),
long = round(long, 2))]
fwrite(d1, "data/sample_ping.csv")
# Bayesian_NB_data.csv
d2 = fread("private/truck_crash_SCE.csv") %>%
.[!(driver %in%
c("abad", "beaj10", "beni0", "bonr7", "booa0", "brad6", "bror7",
"busk2", "carr5", "clec25", "cunj19", "cure", "dund52", "gar15r",
"grit21", "gros", "guar", "gulc1", "gurj", "hal166", "harj2",
"higt12", "host", "johj48", "johw9", "jons86", "kena", "kesk",
"kisi", "kopc", "lamr27", "lasr2", "leeb1", "lege3", "manr4",
"mezj0", "mitm3", "monr83", "ouza1", "pert22", "phij2", "rivl13",
"ruba0", "ruic4", "salm37", "sanm13", "shar3", "sopp2", "thog50",
"thog76", "thom12", "thori1", "upsj"))] %>%
.[,`:=`(EMPLID = NULL, non_dot_injuries = NULL,
bus_unit = case_when(bus_unit == "DCS00" ~ "Dedicated",
bus_unit == "JBI00" ~ "Intermodal",
bus_unit == "VAN00" ~ "Final-mile"),
d_type = case_when(d_type == "LOC" ~ "Local",
d_type == "REG" ~ "Regional",
d_type == "OTR" ~ "Over-the-road"),
driver = paste0("d", stringr::str_pad(as.integer(as.factor(driver)),
5, "left", "0")))]
fwrite(d2, "data/Bayesian_NB_data.csv")
stat = fread("data/Bayesian_NB_data.csv") %>%
.[order(driver),]
stat
pacman::p_load(data.table, dplyr, ggplot2, lubridate, kableExtra, psych, corrplot)
d = fread("data/sample_ping.csv") %>%
.[,ping_time := ymd_hms(ping_time)]
knitr::kable(d[1:10,], align = "c", caption = "Sample ping data")
segment_0 = function(speed, threshold, time_diff) {
speed1 = speed
speed[time_diff >= threshold] <- 0
r1 = rle(speed != 0)
r1$values <- replicate(length(r1$values), 1)
r1$values <- cumsum(r1$values)
order_tmp <- inverse.rle(r1)
dat_tmp1 <- data.table::data.table(speed, order_tmp, time_diff)
dat_tmp2 <- dat_tmp1[,.(sumdiff = sum(time_diff)), by = order_tmp]
r2 = rle(speed != 0); first_rle = r2$values[1]
r2$values[r2$values == 0 & dat_tmp2$sumdiff < threshold] <- TRUE
r2$values[1] = first_rle
r2 <- rle(inverse.rle(r2))
r2$values[r2$values] = cumsum(r2$values[r2$values])
id = inverse.rle(r2)
jump_speed = which(id == 0 & speed1 != 0)
id[jump_speed] = id[jump_speed + 1]
return(id)
}
d_id = d %>%
.[,diff := as.integer(difftime(ping_time, shift(ping_time, type = "lag", fill = 0),
units = "mins")), driver] %>%
.[,diff := {diff[1] = 0L; diff}, driver] %>%
.[,trip_id := segment_0(speed = speed, threshold = 30, time_diff = diff), driver]
knitr::kable(d_id[1:10,], align = "c", caption = "Sample ping data with time difference and trip ID")
d_trip = d %>%
.[trip_id != 0,] %>%
.[,.(start_time = ping_time[1], end_time = ping_time[.N]), .(driver, trip_id)] %>%
.[,trip_length := round(as.numeric(difftime(end_time, start_time, units = "mins")), 2)] %>%
.[,trip_median := start_time + 60*trip_length/2]
knitr::kable(d_trip, align = "c", caption = "Aggregated trips from sample ping")
p2 = d %>%
.[,p_color := case_when(speed >= 50 ~ ">=50 MPH",
speed >= 25 & speed < 50 ~ "(25, 50] MPH",
speed >   0 & speed < 25 ~ "(0, 25] MPH",
speed == 0 ~ "0 MPH")] %>%
.[,p_color := factor(p_color, levels = c("0 MPH", "(0, 25] MPH", "(25, 50] MPH", ">=50 MPH"))] %>%
ggplot(aes(ping_time, speed)) +
geom_point(aes(color = p_color)) +
scale_colour_manual(name = "speed category", values = c("#636363", "#31a354", "#fb6a4a", "#a50f15")) +
geom_line() + theme_bw() +
geom_segment(data = d_trip, aes(x = start_time, xend = end_time, y = -3, yend = -3),
arrow = arrow(length = unit(.2, "cm")), lineend = 'butt', size = .8, color = "#7b3294") +
geom_text(data = d_trip, aes(x = trip_median, y = rep(-4.8, nrow(d_trip)),
label = paste(rep("Trip", nrow(d_trip)), 1:nrow(d_trip), " ")),
color = "#7b3294", size = 3) +
labs(x = "date and time of ping", y = "ping speed (MPH)") +
scale_y_continuous(breaks = c(0, 25, 50), limits = c(-5, 70)) +
theme(legend.justification = c(1, 1), legend.position = c(0.97, 1),
legend.background = element_rect(fill=alpha('white', 0.1)),
legend.direction="horizontal",
panel.grid.major.x = element_blank(), panel.grid.minor = element_blank())
p2
d %>%
.[,p_color := case_when(speed >= 50 ~ ">=50 MPH",
speed >= 25 & speed < 50 ~ "(25, 50] MPH",
speed >   0 & speed < 25 ~ "(0, 25] MPH",
speed == 0 ~ "0 MPH")] %>%
.[,p_color := factor(p_color, levels = c("0 MPH", "(0, 25] MPH", "(25, 50] MPH", ">=50 MPH"))] %>%
ggplot(aes(ping_time, speed)) +
geom_point(aes(color = p_color))
d %>%
.[,p_color := case_when(speed >= 50 ~ ">=50 MPH",
speed >= 25 & speed < 50 ~ "(25, 50] MPH",
speed >   0 & speed < 25 ~ "(0, 25] MPH",
speed == 0 ~ "0 MPH")] %>%
.[,p_color := factor(p_color, levels = c("0 MPH", "(0, 25] MPH", "(25, 50] MPH", ">=50 MPH"))] %>%
ggplot(aes(ping_time, speed)) +
geom_point(aes(color = p_color)) +
scale_colour_manual(name = "speed category", values = c("#636363", "#31a354", "#fb6a4a", "#a50f15")) +
geom_line() + theme_bw()
d_trip
d %>%
.[,p_color := case_when(speed >= 50 ~ ">=50 MPH",
speed >= 25 & speed < 50 ~ "(25, 50] MPH",
speed >   0 & speed < 25 ~ "(0, 25] MPH",
speed == 0 ~ "0 MPH")] %>%
.[,p_color := factor(p_color, levels = c("0 MPH", "(0, 25] MPH", "(25, 50] MPH", ">=50 MPH"))] %>%
ggplot(aes(ping_time, speed)) +
geom_point(aes(color = p_color)) +
scale_colour_manual(name = "speed category", values = c("#636363", "#31a354", "#fb6a4a", "#a50f15")) +
geom_line() + theme_bw() +
geom_segment(data = d_trip, aes(x = start_time, xend = end_time, y = -3, yend = -3),
arrow = arrow(length = unit(.2, "cm")), lineend = 'butt', size = .8, color = "#7b3294") +
geom_text(data = d_trip, aes(x = trip_median, y = rep(-4.8, nrow(d_trip)),
label = paste(rep("Trip", nrow(d_trip)), 1:nrow(d_trip), " ")),
color = "#7b3294", size = 3)
d %>%
.[,p_color := case_when(speed >= 50 ~ ">=50 MPH",
speed >= 25 & speed < 50 ~ "(25, 50] MPH",
speed >   0 & speed < 25 ~ "(0, 25] MPH",
speed == 0 ~ "0 MPH")] %>%
.[,p_color := factor(p_color, levels = c("0 MPH", "(0, 25] MPH", "(25, 50] MPH", ">=50 MPH"))] %>%
ggplot(aes(ping_time, speed)) +
geom_point(aes(color = p_color)) +
scale_colour_manual(name = "speed category", values = c("#636363", "#31a354", "#fb6a4a", "#a50f15")) +
geom_line() + theme_bw() +
geom_segment(data = d_trip, aes(x = start_time, xend = end_time, y = -3, yend = -3),
arrow = arrow(length = unit(.2, "cm")), lineend = 'butt', size = .8, color = "#7b3294") +
geom_text(data = d_trip, aes(x = trip_median, y = rep(-4.8, nrow(d_trip)),
label = paste(rep("Trip", nrow(d_trip)), 1:nrow(d_trip), " ")),
color = "#7b3294", size = 3) +
labs(x = "date and time of ping", y = "ping speed (MPH)") +
scale_y_continuous(breaks = c(0, 25, 50), limits = c(-5, 70))
d %>%
.[,p_color := case_when(speed >= 50 ~ ">=50 MPH",
speed >= 25 & speed < 50 ~ "(25, 50] MPH",
speed >   0 & speed < 25 ~ "(0, 25] MPH",
speed == 0 ~ "0 MPH")] %>%
.[,p_color := factor(p_color, levels = c("0 MPH", "(0, 25] MPH", "(25, 50] MPH", ">=50 MPH"))] %>%
ggplot(aes(ping_time, speed)) +
geom_point(aes(color = p_color)) +
scale_colour_manual(name = "speed category", values = c("#636363", "#31a354", "#fb6a4a", "#a50f15")) +
geom_line() + theme_bw() +
geom_segment(data = d_trip, aes(x = start_time, xend = end_time, y = -3, yend = -3),
arrow = arrow(length = unit(.2, "cm")), lineend = 'butt', size = .8, color = "#7b3294") +
geom_text(data = d_trip, aes(x = trip_median, y = rep(-4.8, nrow(d_trip)),
label = paste(rep("Trip", nrow(d_trip)), 1:nrow(d_trip), " ")),
color = "#7b3294", size = 3) +
labs(x = "date and time of ping", y = "ping speed (MPH)") +
scale_y_continuous(breaks = c(0, 25, 50), limits = c(-5, 70)) +
theme(legend.justification = c(1, 1), legend.position = c(0.97, 1),
legend.background = element_rect(fill=alpha('white', 0.1)),
legend.direction="horizontal",
panel.grid.major.x = element_blank(), panel.grid.minor = element_blank())
p2 = d %>%
.[,p_color := case_when(speed >= 50 ~ ">=50 MPH",
speed >= 25 & speed < 50 ~ "(25, 50] MPH",
speed >   0 & speed < 25 ~ "(0, 25] MPH",
speed == 0 ~ "0 MPH")] %>%
.[,p_color := factor(p_color, levels = c("0 MPH", "(0, 25] MPH", "(25, 50] MPH", ">=50 MPH"))] %>%
ggplot(aes(ping_time, speed)) +
geom_point(aes(color = p_color)) +
scale_colour_manual(name = "speed category", values = c("#636363", "#31a354", "#fb6a4a", "#a50f15")) +
geom_line() + theme_bw() +
geom_segment(data = d_trip, aes(x = start_time, xend = end_time, y = -3, yend = -3),
arrow = arrow(length = unit(.2, "cm")), lineend = 'butt', size = .8, color = "#7b3294") +
geom_text(data = d_trip, aes(x = trip_median, y = rep(-4.8, nrow(d_trip)),
label = paste(rep("Trip", nrow(d_trip)), 1:nrow(d_trip), " ")),
color = "#7b3294", size = 3) +
labs(x = "date and time of ping", y = "ping speed (MPH)") +
scale_y_continuous(breaks = c(0, 25, 50), limits = c(-5, 70)) +
theme(legend.justification = c(1, 1), legend.position = c(0.97, 1),
#legend.background = element_rect(fill=alpha('white', 0.1)),
legend.direction="horizontal",
panel.grid.major.x = element_blank(), panel.grid.minor = element_blank())
p2
p2 = d %>%
.[,p_color := case_when(speed >= 50 ~ ">=50 MPH",
speed >= 25 & speed < 50 ~ "(25, 50] MPH",
speed >   0 & speed < 25 ~ "(0, 25] MPH",
speed == 0 ~ "0 MPH")] %>%
.[,p_color := factor(p_color, levels = c("0 MPH", "(0, 25] MPH", "(25, 50] MPH", ">=50 MPH"))] %>%
ggplot(aes(ping_time, speed)) +
geom_point(aes(color = p_color)) +
scale_colour_manual(name = "speed category", values = c("#636363", "#31a354", "#fb6a4a", "#a50f15")) +
geom_line() + theme_bw() +
geom_segment(data = d_trip, aes(x = start_time, xend = end_time, y = -3, yend = -3),
arrow = arrow(length = unit(.2, "cm")), lineend = 'butt', size = .8, color = "#7b3294") +
geom_text(data = d_trip, aes(x = trip_median, y = rep(-4.8, nrow(d_trip)),
label = paste(rep("Trip", nrow(d_trip)), 1:nrow(d_trip), " ")),
color = "#7b3294", size = 3) +
labs(x = "date and time of ping", y = "ping speed (MPH)") +
scale_y_continuous(breaks = c(0, 25, 50), limits = c(-5, 70)) +
theme(legend.justification = c(1, 1), legend.position = c(0.97, 1),
legend.background = element_rect(fill=alpha('white', 0.1)),
legend.direction="horizontal",
panel.grid.major.x = element_blank(), panel.grid.minor = element_blank())
p2 = d %>%
.[,p_color := case_when(speed >= 50 ~ ">=50 MPH",
speed >= 25 & speed < 50 ~ "(25, 50] MPH",
speed >   0 & speed < 25 ~ "(0, 25] MPH",
speed == 0 ~ "0 MPH")] %>%
.[,p_color := factor(p_color, levels = c("0 MPH", "(0, 25] MPH", "(25, 50] MPH", ">=50 MPH"))] %>%
ggplot(aes(ping_time, speed)) +
geom_point(aes(color = p_color)) +
scale_colour_manual(name = "speed category", values = c("#636363", "#31a354", "#fb6a4a", "#a50f15")) +
geom_line() + theme_bw() +
geom_segment(data = d_trip, aes(x = start_time, xend = end_time, y = -3, yend = -3),
arrow = arrow(length = unit(.2, "cm")), lineend = 'butt', size = .8, color = "#7b3294") +
geom_text(data = d_trip, aes(x = trip_median, y = rep(-4.8, nrow(d_trip)),
label = paste(rep("Trip", nrow(d_trip)), 1:nrow(d_trip), " ")),
color = "#7b3294", size = 3) +
labs(x = "date and time of ping", y = "ping speed (MPH)") +
scale_y_continuous(breaks = c(0, 25, 50), limits = c(-5, 70)) +
theme(legend.justification = c(1, 1), legend.position = c(0.97, 1),
legend.background = element_rect(fill=alpha('white', 0.4)),
legend.direction="horizontal",
panel.grid.major.x = element_blank(), panel.grid.minor = element_blank())
p2 = d %>%
.[,p_color := case_when(speed >= 50 ~ ">=50 MPH",
speed >= 25 & speed < 50 ~ "(25, 50] MPH",
speed >   0 & speed < 25 ~ "(0, 25] MPH",
speed == 0 ~ "0 MPH")] %>%
.[,p_color := factor(p_color, levels = c("0 MPH", "(0, 25] MPH", "(25, 50] MPH", ">=50 MPH"))] %>%
ggplot(aes(ping_time, speed)) +
geom_point(aes(color = p_color)) +
scale_colour_manual(name = "speed category", values = c("#636363", "#31a354", "#fb6a4a", "#a50f15")) +
geom_line() + theme_bw() +
geom_segment(data = d_trip, aes(x = start_time, xend = end_time, y = -3, yend = -3),
arrow = arrow(length = unit(.2, "cm")), lineend = 'butt', size = .8, color = "#7b3294") +
geom_text(data = d_trip, aes(x = trip_median, y = rep(-4.8, nrow(d_trip)),
label = paste(rep("Trip", nrow(d_trip)), 1:nrow(d_trip), " ")),
color = "#7b3294", size = 3) +
labs(x = "date and time of ping", y = "ping speed (MPH)") +
scale_y_continuous(breaks = c(0, 25, 50), limits = c(-5, 70)) +
theme(legend.justification = c(1, 1), legend.position = c(0.97, 1),
legend.background = element_rect(fill=alpha('blue', 0.1)),
legend.direction="horizontal",
panel.grid.major.x = element_blank(), panel.grid.minor = element_blank())
pacman::p_load(data.table, dplyr, ggplot2, lubridate, kableExtra, psych, corrplot, scales)
p2 = d %>%
.[,p_color := case_when(speed >= 50 ~ ">=50 MPH",
speed >= 25 & speed < 50 ~ "(25, 50] MPH",
speed >   0 & speed < 25 ~ "(0, 25] MPH",
speed == 0 ~ "0 MPH")] %>%
.[,p_color := factor(p_color, levels = c("0 MPH", "(0, 25] MPH", "(25, 50] MPH", ">=50 MPH"))] %>%
ggplot(aes(ping_time, speed)) +
geom_point(aes(color = p_color)) +
scale_colour_manual(name = "speed category", values = c("#636363", "#31a354", "#fb6a4a", "#a50f15")) +
geom_line() + theme_bw() +
geom_segment(data = d_trip, aes(x = start_time, xend = end_time, y = -3, yend = -3),
arrow = arrow(length = unit(.2, "cm")), lineend = 'butt', size = .8, color = "#7b3294") +
geom_text(data = d_trip, aes(x = trip_median, y = rep(-4.8, nrow(d_trip)),
label = paste(rep("Trip", nrow(d_trip)), 1:nrow(d_trip), " ")),
color = "#7b3294", size = 3) +
labs(x = "date and time of ping", y = "ping speed (MPH)") +
scale_y_continuous(breaks = c(0, 25, 50), limits = c(-5, 70)) +
theme(legend.justification = c(1, 1), legend.position = c(0.97, 1),
legend.background = element_rect(fill=alpha('white', 0.1)),
legend.direction = "horizontal",
panel.grid.major.x = element_blank(), panel.grid.minor = element_blank())
p2
stat = fread("data/Bayesian_NB_data.csv") %>%
.[order(driver),]
stat
d1 = fread("private/plot_ping_trip_agg.csv") %>%
.[, `:=`(driver = "sample_driver",
trip_id = NULL,
lat = round(lat, 2),
long = round(long, 2))]
d1
d1
d2 = fread("private/truck_crash_SCE.csv")
d2
d2 = fread("private/truck_crash_SCE.csv") %>%
.[!(driver %in%
c("abad", "beaj10", "beni0", "bonr7", "booa0", "brad6", "bror7",
"busk2", "carr5", "clec25", "cunj19", "cure", "dund52", "gar15r",
"grit21", "gros", "guar", "gulc1", "gurj", "hal166", "harj2",
"higt12", "host", "johj48", "johw9", "jons86", "kena", "kesk",
"kisi", "kopc", "lamr27", "lasr2", "leeb1", "lege3", "manr4",
"mezj0", "mitm3", "monr83", "ouza1", "pert22", "phij2", "rivl13",
"ruba0", "ruic4", "salm37", "sanm13", "shar3", "sopp2", "thog50",
"thog76", "thom12", "thori1", "upsj"))]
d2
# Bayesian_NB_data.csv
d2 = fread("private/truck_crash_SCE.csv") %>%
.[!(driver %in%
c("abad", "beaj10", "beni0", "bonr7", "booa0", "brad6", "bror7",
"busk2", "carr5", "clec25", "cunj19", "cure", "dund52", "gar15r",
"grit21", "gros", "guar", "gulc1", "gurj", "hal166", "harj2",
"higt12", "host", "johj48", "johw9", "jons86", "kena", "kesk",
"kisi", "kopc", "lamr27", "lasr2", "leeb1", "lege3", "manr4",
"mezj0", "mitm3", "monr83", "ouza1", "pert22", "phij2", "rivl13",
"ruba0", "ruic4", "salm37", "sanm13", "shar3", "sopp2", "thog50",
"thog76", "thom12", "thori1", "upsj"))] %>%
.[,`:=`(EMPLID = NULL, non_dot_injuries = NULL,
# bus_unit = case_when(bus_unit == "DCS00" ~ "Dedicated",
#                      bus_unit == "JBI00" ~ "Intermodal",
#                      bus_unit == "VAN00" ~ "Final-mile"),
# d_type = case_when(d_type == "LOC" ~ "Local",
#                    d_type == "REG" ~ "Regional",
#                    d_type == "OTR" ~ "Over-the-road"),
driver = paste0("d", stringr::str_pad(as.integer(as.factor(driver)),
5, "left", "0")))]
d2
d2
fwrite(d2, "data/Bayesian_NB_data.csv")
stat = fread("data/Bayesian_NB_data.csv") %>%
.[order(driver),]
stat
stat = stat %>%
mutate(sce_CM = sce_CM*10000/distance,
sce_HB = sce_HB*10000/distance,
sce_HW = sce_HW*10000/distance,
sce_RS = sce_RS*10000/distance,
sce_N = sce_N*10000/distance )
r0 = d[,.(`Headway` = sce_HW,
`Hard brake` = sce_HB,
`Rolling stability` = sce_RS,
`Collision mitigation` = sce_CM,
Age = age,
Gender = as.integer(factor(gender)),
`Ping speed` = ping_speed,
`Business unit` = as.integer(factor(bus_unit,
levels = c('Dedicated', 'Intermodal', 'Final-mile'))),
`Driver type` = as.integer(factor(d_type,
levels = c('Local', 'Regional', 'Over-the-road'))))] %>%
mixed.cor()
stat = fread("data/Bayesian_NB_data.csv") %>%
.[order(driver),]
pacman::p_load(corrgram)
stat = stat %>%
mutate(sce_CM = sce_CM*10000/distance,
sce_HB = sce_HB*10000/distance,
sce_HW = sce_HW*10000/distance,
sce_RS = sce_RS*10000/distance,
sce_N = sce_N*10000/distance )
r0 = stat %>%
mutate(`Headway` = sce_HW,
`Hard brake` = sce_HB,
`Rolling stability` = sce_RS,
`Collision mitigation` = sce_CM,
Age = age,
Gender = as.integer(factor(gender)),
`Ping speed` = ping_speed,
`Business unit` = as.integer(factor(bus_unit,
levels = c('Dedicated', 'Intermodal', 'Final-mile'))),
`Driver type` = as.integer(factor(d_type,
levels = c('Local', 'Regional', 'Over-the-road')))) %>%
mixed.cor()
corrplot(r0$rho,
method="color",
col = rev(RColorBrewer::brewer.pal(n = 8, name = "RdYlBu")),
type="lower",number.font = 7,
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt = 25,
diag=FALSE,
mar = rep(0, 4),
xpd = NA)
r0 = stat %>%
mutate(`Headway` = sce_HW,
`Hard brake` = sce_HB,
`Rolling stability` = sce_RS,
`Collision mitigation` = sce_CM,
Age = age,
Gender = as.integer(factor(gender)),
`Ping speed` = ping_speed,
`Business unit` = as.integer(factor(bus_unit,
levels = c('Dedicated', 'Intermodal', 'Final-mile'))),
`Driver type` = as.integer(factor(d_type,
levels = c('Local', 'Regional', 'Over-the-road')))) %>%
mixed.cor()
stat
stat %>%
mutate(`Headway` = sce_HW,
`Hard brake` = sce_HB,
`Rolling stability` = sce_RS,
`Collision mitigation` = sce_CM,
Age = age,
Gender = as.integer(factor(gender)),
`Ping speed` = ping_speed,
`Business unit` = as.integer(factor(bus_unit,
levels = c('Dedicated', 'Intermodal', 'Final-mile'))),
`Driver type` = as.integer(factor(d_type,
levels = c('Local', 'Regional', 'Over-the-road'))))
stat = fread("data/Bayesian_NB_data.csv") %>%
.[order(driver),]
stat = stat %>%
mutate(sce_CM = sce_CM*10000/distance,
sce_HB = sce_HB*10000/distance,
sce_HW = sce_HW*10000/distance,
sce_RS = sce_RS*10000/distance,
sce_N = sce_N*10000/distance )
r0 = stat %>%
mutate(Gender = as.integer(factor(gender)),
`Ping speed` = ping_speed,
`Business unit` = as.integer(factor(bus_unit,
levels = c('Dedicated', 'Intermodal', 'Final-mile'))),
`Driver type` = as.integer(factor(d_type,
levels = c('Local', 'Regional', 'Over-the-road')))) %>%
select(`Headway` = sce_HW,
`Hard brake` = sce_HB,
`Rolling stability` = sce_RS,
`Collision mitigation` = sce_CM,
Age = age,
Gender, `Ping speed`, `Business unit`, `Driver type`) %>%
mixed.cor()
corrplot(r0$rho,
method="color",
col = rev(RColorBrewer::brewer.pal(n = 8, name = "RdYlBu")),
type="lower",number.font = 7,
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt = 25,
diag=FALSE,
mar = rep(0, 4),
xpd = NA)
install.packages("loo")
pacman::p_load(data.table, dplyr)
d1 = fread("private/plot_ping_trip_agg.csv")
d1
pacman::p_load(data.table, dplyr, lubridate)
d1 = fread("private/plot_ping_trip_agg.csv")
d1
str(d1)
# sample_ping.csv
d1 = fread("private/plot_ping_trip_agg.csv") %>%
.[, `:=`(driver = "a fake driver",
trip_id = NULL,
ping_time = ymd_hms(ping_time),
lat = round(lat, 1),
long = round(long, 1))]
d1
d1
# sample_ping.csv
d1 = fread("private/plot_ping_trip_agg.csv") %>%
.[, `:=`(driver = "a fake driver",
trip_id = NULL,
ping_time = floor_date(ymd_hms(ping_time), unit = "minutes"),
lat = round(lat, 1),
long = round(long, 1))]
d1
d1
d1[1:3,.(ping_time = ping_time + 60)]
d1[1:3,.(ping_time = ping_time + 60*60*24)]
d1[1:3,.(ping_time = ping_time + 60*60*24*250)]
# sample_ping.csv
d1 = fread("private/plot_ping_trip_agg.csv") %>%
.[, `:=`(
driver = "a fake driver",
trip_id = NULL,
ping_time = floor_date(ymd_hms(ping_time), unit = "minutes") + 60 *
60 * 24 * 250,
lat = round(lat, 1),
long = round(long, 1)
)]
fwrite(d1, "data/sample_ping.csv")
pacman::p_load(data.table, dplyr, lubridate)
# sample_ping.csv
d1 = fread("private/plot_ping_trip_agg.csv") %>%
.[, `:=`(
driver = "a fake driver",
trip_id = NULL,
ping_time = floor_date(ymd_hms(ping_time), unit = "minutes") + 60 *
60 * 24 * 250,
lat = round(lat, 1),
long = round(long, 1)
)]
fwrite(d1, "data/sample_ping.csv")
